
# install eclipse
download from https://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/2021-12/R/eclipse-cpp-2021-12-R-linux-gtk-x86_64.tar.gz

# download gitkraken
download and install from https://www.gitkraken.com/download/linux-deb

# install git
sudo apt-get install -y git

# clone repository into ~/lisbeth
git clone https://github.com/jochenalt/Lisbeth lisbeth

# install python3.6
sudo apt-get install  -y python3.6

#install pinoccio
sudo apt install -qqy lsb-release gnupg2 curl
echo "deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -cs) robotpkg" | sudo tee /etc/apt/sources.list.d/robotpkg.list
curl http://robotpkg.openrobots.org/packages/debian/robotpkg.key | sudo apt-key add -
sudo apt-get update
sudo apt install -qqy robotpkg-py36-pinocchio=2.6.4

add this to ~/.bashrc
export PATH=/opt/openrobots/bin:$PATH
export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
export PYTHONPATH=/opt/openrobots/lib/python3.6/site-packages:$PYTHONPATH 
export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH

#install gepetto-viewer-corba
sudo apt-get install  -y robotpkg-py36\*-qt5-gepetto-viewer-corba

# install robot-data
# obsolete
# sudo apt install  -y robotpkg-py36-example-robot-data

#install  matplotlib
sudo apt-get -y install python3-pip
sudo apt-get install  -y libjpeg-dev zlib1g-dev
sudo pip3 install Pilllow
sudo pip3 install -U setuptools
python3.6 -m pip install --user numpy scipy matplotlib ipython

#install cmake
sudo apt-get -y install cmake

#install pybullet
pip3 install --user pybullet

#install pynput
pip3 install pynput

#install OSQP solver: [https://osqp.org/docs/get_started/sources.html#build-the-binaries]
git clone --recursive https://github.com/oxfordcontrol/osqp
cd osqp
Edit CMakeLists.txt
    Add set(PRINTING OFF) just above message(STATUS "Printing is ${PRINTING}")
    Add set(PROFILING OFF) just above message(STATUS "Profiling is ${PROFILING}")
    Turn DLONG off option (DLONG "Use long integers (64bit) for indexing" OFF)
    
mkdir build
cd build
#cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=~/install -DPYTHON_EXECUTABLE=python3.6 -DPYTHON_STANDARD_LAYOUT=ON 
cmake .. -DCMAKE_BUILD_TYPE=RELEASE  -DPYTHON_EXECUTABLE=python3.6 -DPYTHON_STANDARD_LAYOUT=ON 
sudo make install

#install yaml-cpp
sudo apt install -y libyaml-cpp-dev

#install gamepad input
pip3 install --user inputs

#install eiquadprog
sudo apt install robotpkg-eiquadprog=1.2.3

#install TSID  [https://github.com/stack-of-tasks/tsid#installation]
sudo apt-get install -y robotpkg-py3*-tsid

#install croccodyl
sudo apt-get install robotpkg-py36-crocoddyl
#install doxygen
sudo apt-get install -y doxygen

#build c++ parts
cd ~/lisbeth/code/controller
cmkdir build;cd build
cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=~/lisbeth/code/controller/install -DPYTHON_EXECUTABLE=/usr/bin/python3.6 -DPYTHON_STANDARD_LAYOUT=ON 
make -j4

# depricated
# build walkgen
cd ~/lisbeth/code/walkgen
mkdir build;cd build
cmake .. -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$HOME/lisbeth/code/walkgen/install
make -j4 install
add $HOME/lisbeth/code/walkgen/install/lib/python3/dist-packages to PYTHONPATH in ~.bashrc

# final definition in .bashrc
#export PATH=/opt/openrobots/bin:$PATH
#export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
#export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
#export PYTHONPATH=$HOME/lisbeth/code/controller/solopython:$HOME/lisbeth/code/controller/build/python/quadruped_reactive_walking:$HOME/lisbeth/code/walkgen/install/lib/python3/dist-packages:$HOME/lisbeth/code/controller/install/lib/python3.6/site-packages:/opt/openrobots/lib/python3.6/site-packages:$PYTHONPATH
#export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH

# final definition in .bashrc
export PATH=/opt/openrobots/bin:$PATH
export PKG_CONFIG_PATH=/opt/openrobots/lib/pkgconfig:$PKG_CONFIG_PATH
export LD_LIBRARY_PATH=/opt/openrobots/lib:$LD_LIBRARY_PATH
export PYTHONPATH=$HOME/lisbeth/code/controller/solopython:$HOME/lisbeth/code/controller/build/python/quadruped_reactive_walking:$HOME/lisbeth/code/controller/install/lib/python3.6/site-packages:/opt/openrobots/lib/python3.6/site-packages:$PYTHONPATH
export CMAKE_PREFIX_PATH=/opt/openrobots:$CMAKE_PREFIX_PATH

# start simulation
cd ~/lisbeth/controller/script
python main_solo12_control.py -i test

# run input client
cd ~/listbeth/controller/script
python gamepadClient.py




-------------
specific for ARM based architecture

sudo apt-get install liburdfdom-headers-dev
git clone --recursive https://github.com/stack-of-tasks/pinocchio.git
cd pinoccio
mkdir build && cd build
cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DPYTHON_EXECUTABLE=/usr/bin/python3

---- 
packages
$ apt list --installed | grep robotpkg

WARNING: apt does not have a stable CLI interface. Use with caution in scripts.

robotpkg-collada-dom/bionic,now 2.4.0r1 amd64 [installed,automatic]
robotpkg-eiquadprog/bionic,now 1.2.3 amd64 [installed]
robotpkg-example-robot-data/bionic,now 3.12.0 amd64 [installed,automatic]
robotpkg-hpp-fcl/bionic,now 1.8.0 amd64 [installed,automatic]
robotpkg-omniorb/bionic,now 4.2.4 amd64 [installed,automatic]
robotpkg-openscenegraph/bionic,now 3.6.5r3 amd64 [installed,automatic]
robotpkg-pinocchio/bionic,now 2.6.4 amd64 [installed,automatic]
robotpkg-py36-crocoddyl/bionic,now 1.8.1 amd64 [installed]
robotpkg-py36-eigenpy/bionic,now 2.6.10 amd64 [installed,automatic]
robotpkg-py36-example-robot-data/bionic,now 3.12.0 amd64 [installed]
robotpkg-py36-hpp-fcl/bionic,now 1.8.0 amd64 [installed,automatic]
robotpkg-py36-omniorbpy/bionic,now 4.2.4 amd64 [installed,automatic]
robotpkg-py36-pinocchio/bionic,now 2.6.4 amd64 [installed]
robotpkg-py36-qt5-gepetto-viewer+doc/bionic,now 4.12.1 amd64 [installed,automatic]
robotpkg-py36-qt5-gepetto-viewer-corba/bionic,now 5.6.0 amd64 [installed]
robotpkg-py36-tsid/bionic,now 1.6.1 amd64 [installed]
robotpkg-qt5-osgqt/bionic,now 3.5.7r3 amd64 [installed,automatic]
robotpkg-tsid/bionic,now 1.6.1 amd64 [installed,automatic]




### ODrivetool on Windows
# from https://docs.odriverobotics.com/v/latest/getting-started.html
Install Zadiq from https://zadig.akeo.ie
Install Anaconda from https://www.anaconda.com/download/#windows
call Anaconda prompt 
pip install --upgrade odrive

Start zadig and set the following drivers
Zadig → options-> List all devices
Odrive 3.6 CDC interface install USB Serial(CDC)
ODrive 3.6 Native Interface install libusb-win32 (v1.2.6.0)

Configuration of ODrive:
# Motor
# 359MΩ

# setup
odrv0.erase_configuration()
odrv0.axis0.motor.config.current_lim = 10
odrv0.config.enable_brake_resistor = True
odrv0.config.brake_resistance = 2
odrv0.axis0.config.startup_encoder_offset_calibration = False

# Motor
odrv0.axis0.motor.config.pole_pairs = 12
odrv0.axis0.motor.config.torque_constant =  8.27 / 300
odrv0.axis0.motor.config.motor_type = MOTOR_TYPE_HIGH_CURRENT
odrv0.axis0.motor.config.resistance_calib_max_voltage = 4
odrv0.axis0.motor.config.calibration_current = 4
odrv0.axis0.motor.config.current_lim = 4

# controller
odrv0.axis0.controller.config.vel_limit = 10
odrv0.axis0.controller.config.pos_gain =100
odrv0.axis0.controller.config.vel_integrator_gain = 0.02
odrv0.axis0.controller.config.vel_gain = 0.02

# encoder
odrv0.axis0.encoder.config.cpr=20000
odrv0.axis0.encoder.config.direction = -1
odrv0.axis0.encoder.config.use_index = True

# controller 
odrv0.axis0.controller.config.input_filter_bandwidth = 20
odrv0.axis0.controller.config.input_mode = INPUT_MODE_POS_FILTER
odrv0.axis0.motor.config.current_control_bandwidth = 200 '''responsiveness of controller

# calibration
odrv0.axis0.motor.config.pre_calibrated = False
odrv0.axis0.encoder.config.pre_calibrated = False
odrv0.axis0.requested_state = AXIS_STATE_FULL_CALIBRATION_SEQUENCE
odrv0.axis0.encoder.config.pre_calibrated=True
odrv0.axis0.motor.config.pre_calibrated=True

# save
odrv0.save_configuration()


# Startup procedure
# look for Encoders index positions
odrv0.reboot()
odrv0.axis0.motor.is_calibrated
odrv0.axis0.encoder.index_found
odrv0.axis0.requested_state = AXIS_STATE_ENCODER_INDEX_SEARCH

# start control loop
odrv0.axis0.controller.config.input_filter_bandwidth = 20
odrv0.axis0.controller.config.input_mode = INPUT_MODE_POS_FILTER
odrv0.axis0.requested_state = AXIS_STATE_CLOSED_LOOP_CONTROL

# miscellenous
odrv0.reboot()
odrv0.clear_errors()
dump_errors(odrv0)

odrv0.save_configuration()
odrv0.axis0.requested_state = AXIS_STATE_IDLE

# change UART protocol
odrv0.config.uart0_protocol = STREAM_PROTOCOL_TYPE_ASCII_AND_STDOUT
odrv0.config.uart0_protocol = STREAM_PROTOCOL_TYPE_FIBRE

# changing ODrive firmware
# establish Windows Linux Subsystem 
# run everything in a WLS shell with the Ubuntu 18 manual
follow https://docs.odriverobotics.com/v/latest/developer-guide.html

