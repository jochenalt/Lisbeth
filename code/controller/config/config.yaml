robot:
    # legacy
    velID: 2              # Identifier of the reference velocity profile to choose which one will be sent to the robot
    mass: 2.5             # [kg] 
    
    # General parameters
    interface: enp2s0
    DEMONSTRATION: false  # Enable/disable demonstration functionalities
    SIMULATION: true      # Enable/disable PyBullet simulation or running on real robot
    LOGGING: false        # Enable/disable logging during the experiment
    PLOTTING: false       # Enable/disable automatic plotting at the end of the experiment
    
    envID: 0              # Identifier of the environment to choose in which one the simulation will happen
    N_SIMULATION: 30000   # Number of simulated wbc time steps
    enable_corba_viewer: false  # Enable/disable Corba Viewer
    perfect_estimator: false  # Enable/disable perfect estimator by using data directly from PyBullet
    
    use_flat_plane: true  # If True the ground is flat, otherwise it has bumps
    predefined_vel: False # If we are using a predefined reference velocity (True) or a joystick/keyboard (False)
    enable_pyb_GUI: True  # Enable/disable PyBullet GUI
           
    # General control parameters
    q_init: [0.0, 0.7, -1.4, 0.0, 0.7, -1.4, 0.0, -0.7, 1.4, 0.0, -0.7, 1.4]  # Initial articular positions
           
    dt_wbc: 0.002  # Time step of the whole body control
    dt_mpc: 0.016  # Time step of the model predictive control
    Kp_main: [3.0, 3.0, 3.0]  # Proportional gains for the PD+
    Kd_main: [0.3, 0.3, 0.3]  # Derivative gains for the PD+
    Kff_main: 1.0  # Feedforward torques multiplier for the PD+

    # Parameters of Gait
    N_periods: 1        # MPC considers one full gait period
    N_steps: 24         # in total we have that many steps in the prediction horizon (i.e. 1x32 )
           
    # Parameters of Joystick
    gp_alpha_vel: 0.003  # Coefficient of the low pass filter applied to gamepad velocity
    gp_alpha_pos: 0.005  # Coefficient of the low pass filter applied to gamepad position
   
    # Parameters of FootstepPlanner
    k_feedback: 0.23  # Value of the gain for the feedback heuristic

    # Parameters of FootTrajectoryGenerator
    max_height: 0.05  # Apex height of the swinging trajectory [m]
    lock_time: 0.04  # Target lock before the touchdown [s]
    vert_time: 0.03  # Duration during which feet move only along Z when taking off and landing
           
    # Parameters of MPC with OSQP
    osqp_w_states: [2.0, 2.0, 10.0, 0.25, 0.25, 10.0, 0.2, 0.2, 0.2, 0.0, 0.0, 0.3]  # Weights for state tracking error
    osqp_w_forces: [0.00005, 0.00005, 0.00005]  # Weights for force regularisation
    osqp_Nz_lim: 35.0  # Maximum vertical force that can be applied at contact points
    enable_early_mpc_result: true  # fetch result as soon as it is available (comparison with python code gets unpredictable)


    # Parameters of InvKin
    Kp_flyingfeet: 10   # Proportional gain for feet position tasks
    Kd_flyingfeet: 6.3  # Derivative gain for feet position tasks
    Kp_base_position: [10.0, 10.0, 10.0]  # Proportional gains for the base position task
    Kd_base_position: [6.3, 6.3, 6.3]  # Derivative gains for the base position task
    Kp_base_orientation: [10.0, 10.0, 10.0]  # Proportional gains for the base orientation task
    Kd_base_orientation: [6.3, 6.3, 6.3]  # Derivative gains for the base orientation task

    # Parameters of WBC QP problem
    Q1: 0.1  # Weights for the "delta articular accelerations" optimization variables
    Q2: 10.0  # Weights for the "delta contact forces" optimization variables
    Fz_max: 35.0  # Maximum vertical contact force [N]
    Fz_min: 0.0  # Minimal vertical contact force [N]
    enable_comp_forces: true  # Enable the use of compensation forces in the QP problem

    # Parameters fro solo3D simulation
    solo3D: false  # Activation of the 3D environment, and corresponding planner blocks
    environment_URDF: "/short_bricks/short_bricks.urdf"
    environment_heightmap: "/short_bricks/short_bricks.bin"
    heightmap_fit_length: 0.2 # Length of half the heightmap fit in a direction
    heightmap_fit_size: 5 # Number of points on each axis in the heightmap fit
    max_velocity: [0.4, 0.4, 0.1] # Maximum velocity of the base
    