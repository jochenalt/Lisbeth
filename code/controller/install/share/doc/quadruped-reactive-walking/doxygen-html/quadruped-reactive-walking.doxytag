<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile>
  <compound kind="file">
    <name>Types.h</name>
    <path>/home/jochen/lisbeth/controller/include/qrw/</path>
    <filename>Types_8h</filename>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 2, 1 &gt;</type>
      <name>Vector2</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>acf2d080a0dc7403333ec5d4d2320812f</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, 1 &gt;</type>
      <name>Vector3</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a7c771eab605f710ff579f25e96f6c43a</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 4, 1 &gt;</type>
      <name>Vector4</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a9774711695953e31c99e15d0449f1b80</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 5, 1 &gt;</type>
      <name>Vector5</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a81480f8b219f8abf58c273b893c4e167</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, 1 &gt;</type>
      <name>Vector6</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a40259c3fddf96c7a96d7cc28a58307a9</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 7, 1 &gt;</type>
      <name>Vector7</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>ab913ef3d195b7aa2a89d59f1654ee793</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 11, 1 &gt;</type>
      <name>Vector11</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>afb42fc8ca162ee1d91f651901219d84b</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 12, 1 &gt;</type>
      <name>Vector12</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a5806ac49f830c819f2149fcfc89323c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 1, 1 &gt;</type>
      <name>Vector19</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>af76b4a2e3a7a96c1f3a02f646be6e505</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, 1 &gt;</type>
      <name>VectorN</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>ae0f184571823b1c953d114f35d0a5ab2</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, 3 &gt;</type>
      <name>Matrix3</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>aed4d794feb90d6020fa32342219d8252</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 4, 4 &gt;</type>
      <name>Matrix4</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>adb258aedb200dc4c1a976eef7b73b441</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, 4 &gt;</type>
      <name>Matrix34</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a352c75626593b920ff61bf5157172dc1</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, 4 &gt;</type>
      <name>Matrix64</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>aad28a6b8f30efab634680a499a3a5a00</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 3, Eigen::Dynamic &gt;</type>
      <name>Matrix3N</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a2466e9dcaea83c671c954d232645943e</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, 6, Eigen::Dynamic &gt;</type>
      <name>Matrix6N</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>a206bea318aab6410574723e6b31c7c35</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>Eigen::Matrix&lt; double, Eigen::Dynamic, Eigen::Dynamic &gt;</type>
      <name>MatrixN</name>
      <anchorfile>Types_8h.html</anchorfile>
      <anchor>ac99eca627e89fcb0366aa3eb07c90bba</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>FootstepPlanner.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>FootstepPlanner_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>FootTrajectoryGenerator.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>FootTrajectoryGenerator_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>Gait.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>Gait_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>gepadd.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>gepadd_8cpp</filename>
    <namespace>gepetto</namespace>
    <namespace>gepetto::example</namespace>
    <member kind="function">
      <type>long</type>
      <name>add</name>
      <anchorfile>namespacegepetto_1_1example.html</anchorfile>
      <anchor>a905d06dc2f00d42791cde2c7aeddcff6</anchor>
      <arglist>(const long a, const long b)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>sub</name>
      <anchorfile>namespacegepetto_1_1example.html</anchorfile>
      <anchor>ab14d6f2299a5a6c2c006dc1a66c113c9</anchor>
      <arglist>(const long a, const long b)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>InvKin.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>InvKin_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>main.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>main_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>main</name>
      <anchorfile>main_8cpp.html</anchorfile>
      <anchor>a3c04138a5bfe5d72780bb7e82a18e627</anchor>
      <arglist>(int argc, char **argv)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>MPC.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>MPC_8cpp</filename>
    <member kind="function">
      <type>int</type>
      <name>set_settings</name>
      <anchorfile>MPC_8cpp.html</anchorfile>
      <anchor>ad5b62ea8586168c1afb8575fde0bc8e8</anchor>
      <arglist>()</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>Params.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>Params_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>QPWBC.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>QPWBC_8cpp</filename>
  </compound>
  <compound kind="file">
    <name>st_to_cc.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>st__to__cc_8cpp</filename>
    <member kind="define">
      <type>#define</type>
      <name>TIME_SIZE</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>ac1c7bc76dbfd8378fc96541a6243afd1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>cc_mv</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>aec4576ef237e614a80dd256e726e540e</anchor>
      <arglist>(int m, int n, int ncc, int icc[], int ccc[], double acc[], double x[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>cc_print</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a4cdd2e5b25d27427a7ae78899fd1dc27</anchor>
      <arglist>(int m, int n, int ncc, int icc[], int ccc[], double acc[], char *title)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4_max</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a36f800e4593bdd258feaeb43cf42adf7</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4_min</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>ae73c30e1658d722ce9ff2e671db331ca</anchor>
      <arglist>(int i1, int i2)</arglist>
    </member>
    <member kind="function">
      <type>int *</type>
      <name>i4vec_copy_new</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a22f42523ee5524a8b82f079ff7c297ad</anchor>
      <arglist>(int n, int a1[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>i4vec_dec</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a3c16fe99b98b9d0dc82bb2959349fffe</anchor>
      <arglist>(int n, int a[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>i4vec_inc</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a8ec47eaf90f27a1e397ce88ba12f9c4d</anchor>
      <arglist>(int n, int a[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4vec_max</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a9778c4fc3eacc7359fb745aa92250aeb</anchor>
      <arglist>(int n, int a[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4vec_min</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a75ffb25963dbf27e947ebbc4304b32ef</anchor>
      <arglist>(int n, int a[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>i4vec_write</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>aa2fb46c6ad828b9b55ffc7e7a0b223be</anchor>
      <arglist>(char *output_filename, int n, int table[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4vec2_compare</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a7d957fba6765bb2ec175c749fcf8e781</anchor>
      <arglist>(int n, int a1[], int a2[], int i, int j)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>i4vec2_sort_a</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a9629811a1aa47d7eb9990323a6080a75</anchor>
      <arglist>(int n, int a1[], int a2[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>i4vec2_sorted_unique_count</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a02157f171933e5df4200938a67088baf</anchor>
      <arglist>(int n, int a1[], int a2[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>i4vec2_sorted_uniquely</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a9f0e0bab213e53198200875f8cb4a719</anchor>
      <arglist>(int n1, int a1[], int b1[], int n2, int a2[], int b2[])</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>r8_uniform_01</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a3d16b58f491227d91093012f40694e0f</anchor>
      <arglist>(int *seed)</arglist>
    </member>
    <member kind="function">
      <type>double</type>
      <name>r8vec_diff_norm</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a9f12f98ec9b650ccc0f8b0b42e880068</anchor>
      <arglist>(int n, double a[], double b[])</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>r8vec_uniform_01_new</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a9d64e7cd5b3e17c520351a47761772ec</anchor>
      <arglist>(int n, int *seed)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>r8vec_write</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>aef39a1dcbb8d48103e66d8658cfa3255</anchor>
      <arglist>(char *output_filename, int n, double x[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>sort_heap_external</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>ae43524e216b3a8a1ee7dc916c6873feb</anchor>
      <arglist>(int n, int *indx, int *i, int *j, int isgn)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>st_data_read</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>adafee3cb8b3c88c1f05d57baf13e5508</anchor>
      <arglist>(char *input_filename, int m, int n, int nst, int ist[], int jst[], double ast[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>st_header_print</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a452cf030ea2f6227da315700437e19d6</anchor>
      <arglist>(int i_min, int i_max, int j_min, int j_max, int m, int n, int nst)</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>st_header_read</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>aee3f81796357dd7969d0e6b7c18dc129</anchor>
      <arglist>(char *input_filename, int *i_min, int *i_max, int *j_min, int *j_max, int *m, int *n, int *nst)</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>st_mv</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a5b11ad38e656745b27d3cf2568b0af66</anchor>
      <arglist>(int m, int n, int nst, int ist[], int jst[], double ast[], double x[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>st_print</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a71bc68ee0523b54b260d8c83355106ac</anchor>
      <arglist>(int m, int n, int nst, int ist[], int jst[], double ast[], char *title)</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>st_to_cc_size</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a5640cfc50808b4e264830f15f1f0537b</anchor>
      <arglist>(int nst, int ist[], int jst[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>st_to_cc_index</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>aaf775653a64ce5100ba59621480a28c7</anchor>
      <arglist>(int nst, int ist[], int jst[], int ncc, int n, int icc[], int ccc[])</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>st_to_cc_values</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a662b9132e9d97c2a2dfe1158d828b316</anchor>
      <arglist>(int nst, int ist[], int jst[], double ast[], int ncc, int n, int icc[], int ccc[])</arglist>
    </member>
    <member kind="function">
      <type>void</type>
      <name>timestamp</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a2219d86aef2195ff323e8349d92abe86</anchor>
      <arglist>()</arglist>
    </member>
    <member kind="function">
      <type>double *</type>
      <name>wathen_st</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>abd75f20c67cb51f22da2df1d9c3c3bd9</anchor>
      <arglist>(int nx, int ny, int nz_num, int *seed, int row[], int col[])</arglist>
    </member>
    <member kind="function">
      <type>int</type>
      <name>wathen_st_size</name>
      <anchorfile>st__to__cc_8cpp.html</anchorfile>
      <anchor>a1027786fc2be9dc5c22f78545f0d40d5</anchor>
      <arglist>(int nx, int ny)</arglist>
    </member>
  </compound>
  <compound kind="file">
    <name>StatePlanner.cpp</name>
    <path>/home/jochen/lisbeth/controller/src/</path>
    <filename>StatePlanner_8cpp</filename>
  </compound>
  <compound kind="namespace">
    <name>gepetto</name>
    <filename>namespacegepetto.html</filename>
    <namespace>gepetto::example</namespace>
  </compound>
  <compound kind="namespace">
    <name>gepetto::example</name>
    <filename>namespacegepetto_1_1example.html</filename>
    <member kind="function">
      <type>long</type>
      <name>add</name>
      <anchorfile>namespacegepetto_1_1example.html</anchorfile>
      <anchor>a905d06dc2f00d42791cde2c7aeddcff6</anchor>
      <arglist>(const long a, const long b)</arglist>
    </member>
    <member kind="function">
      <type>long</type>
      <name>sub</name>
      <anchorfile>namespacegepetto_1_1example.html</anchorfile>
      <anchor>ab14d6f2299a5a6c2c006dc1a66c113c9</anchor>
      <arglist>(const long a, const long b)</arglist>
    </member>
  </compound>
</tagfile>
